[gd_scene load_steps=1 format=2]

[ext_resource id=1 path="palette1.png.001.png" type="Texture"]

[sub_resource id=1 type="Animation"]

resource_name = "ArmatureAction"
step = 0.1
length = 0.791667
loop = false
tracks/0/type = "transform"
tracks/0/path = NodePath(".:Bone1")
tracks/0/interp = 1
tracks/0/keys = [0.0, 1.0, 5.96046e-08, 0.0, 0.0, 1.04308e-07, -2.30913e-14, -2.09277e-14, 1.0, 1.0, 1.0, 1.0, 0.0416667, 1.0, 5.96046e-08, 0.0, 0.0, 1.04308e-07, -2.30913e-14, -2.09277e-14, 1.0, 1.0, 1.0, 1.0, 0.375, 1.0, 5.96046e-08, 0.0, 0.0, 1.04308e-07, -2.30913e-14, -2.09277e-14, 1.0, 1.0, 1.0, 1.0, 0.416667, 1.0, 2.98023e-08, 0.0, 0.0, 5.21541e-08, -1.15456e-14, -1.04639e-14, 1.0, 1.0, 1.0, 1.0, 0.458333, 1.0, 2.98023e-08, 0.0, 0.0, 5.21541e-08, -1.15456e-14, -1.04639e-14, 1.0, 1.0, 1.0, 1.0, 0.791667, 1.0, 2.98023e-08, 0.0, 0.0, 5.21541e-08, -1.15456e-14, -1.04639e-14, 1.0, 1.0, 1.0, 1.0]
tracks/1/type = "transform"
tracks/1/path = NodePath(".:Bone2")
tracks/1/interp = 1
tracks/1/keys = [0.0, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000235679, -0.223851, 0.00453846, 0.974613, 1.0, 1.0, 1.0, 0.0416667, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000232261, -0.220606, 0.00447266, 0.975353, 1.0, 1.0, 1.0, 0.0833333, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000222936, -0.211748, 0.00429307, 0.977315, 1.0, 1.0, 1.0, 0.125, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000209069, -0.198577, 0.00402604, 0.980077, 1.0, 1.0, 1.0, 0.166667, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000192217, -0.182571, 0.00370152, 0.983186, 1.0, 1.0, 1.0, 0.208333, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000174229, -0.165486, 0.00335513, 0.986206, 1.0, 1.0, 1.0, 0.25, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000157136, -0.14925, 0.00302597, 0.988795, 1.0, 1.0, 1.0, 0.291667, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000142924, -0.135752, 0.00275229, 0.990739, 1.0, 1.0, 1.0, 0.333333, 1.0, -3.64611e-08, -2.05245e-08, 2.39327e-07, -0.000133362, -0.12667, 0.00256816, 0.991942, 1.0, 1.0, 1.0, 0.375, 1.0, -6.05634e-08, -2.05082e-08, 2.38881e-07, -0.000130002, -0.123478, 0.00250345, 0.992344, 1.0, 1.0, 1.0, 0.416667, 1.0, -6.8807e-08, -1.0228e-08, 1.18727e-07, 9.59389e-05, 0.0911239, -0.00184749, 0.995838, 1.0, 1.0, 1.0, 0.458333, 1.0, -6.8807e-08, -1.0228e-08, 1.18727e-07, 6.94209e-05, 0.0659365, -0.00133683, 0.997823, 1.0, 1.0, 1.0, 0.5, 1.0, -6.8807e-08, -1.0228e-08, 1.18727e-07, 3.77303e-05, 0.0358362, -0.000726559, 0.999357, 1.0, 1.0, 1.0, 0.541667, 1.0, -6.8807e-08, -1.0228e-08, 1.18727e-07, 1.11481e-05, 0.010588, -0.000214666, 0.999944, 1.0, 1.0, 1.0, 0.583333, 1.0, -4.47047e-08, -1.02443e-08, 1.19173e-07, 6.98492e-10, -9.31777e-10, 0.0, 1.0, 1.0, 1.0, 1.0, 0.625, 1.0, -4.47047e-08, -1.02443e-08, 1.19173e-07, 6.98492e-10, -9.31777e-10, 0.0, 1.0, 1.0, 1.0, 1.0, 0.791667, 1.0, -4.47047e-08, -1.02443e-08, 1.19173e-07, 6.98492e-10, -9.31777e-10, 0.0, 1.0, 1.0, 1.0, 1.0]
tracks/2/type = "transform"
tracks/2/path = NodePath(".:Bone3")
tracks/2/interp = 1
tracks/2/keys = [0.0, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000615538, -0.149592, -0.00672457, 0.988725, 1.0, 1.0, 1.0, 0.0416667, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000602163, -0.146341, -0.00657844, 0.989212, 1.0, 1.0, 1.0, 0.0833333, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000566009, -0.137555, -0.00618347, 0.990475, 1.0, 1.0, 1.0, 0.125, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000513003, -0.124672, -0.00560437, 0.992182, 1.0, 1.0, 1.0, 0.166667, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.00044944, -0.109225, -0.00490995, 0.994005, 1.0, 1.0, 1.0, 0.208333, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000382152, -0.0928717, -0.00417484, 0.995669, 1.0, 1.0, 1.0, 0.25, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000318269, -0.077346, -0.00347692, 0.996998, 1.0, 1.0, 1.0, 0.291667, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000264791, -0.0643491, -0.00289267, 0.997923, 1.0, 1.0, 1.0, 0.333333, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000228285, -0.0554771, -0.00249385, 0.998457, 1.0, 1.0, 1.0, 0.375, 1.0, 1.51576e-07, -5.41984e-08, 1.19232e-06, 0.000214937, -0.0522332, -0.00234803, 0.998632, 1.0, 1.0, 1.0, 0.416667, 1.0, 7.57881e-08, -2.70992e-08, 5.9616e-07, -0.000331129, 0.0804765, 0.00361764, 0.99675, 1.0, 1.0, 1.0, 0.458333, 1.0, 7.57881e-08, -2.70992e-08, 5.9616e-07, -0.000161114, 0.0391576, 0.00176024, 0.999232, 1.0, 1.0, 1.0, 0.5, 1.0, 7.57881e-08, -2.70992e-08, 5.9616e-07, 4.26137e-05, -0.0103549, -0.000465481, 0.999946, 1.0, 1.0, 1.0, 0.541667, 1.0, 7.57881e-08, -2.70992e-08, 5.9616e-07, 0.000212979, -0.051759, -0.00232671, 0.998657, 1.0, 1.0, 1.0, 0.583333, 1.0, 1.093e-07, -2.69159e-08, 5.95149e-07, 0.000284013, -0.0690226, -0.00310276, 0.99761, 1.0, 1.0, 1.0, 0.625, 1.0, 1.093e-07, -2.69159e-08, 5.95149e-07, 0.000254443, -0.0618363, -0.00277971, 0.998082, 1.0, 1.0, 1.0, 0.666667, 1.0, 1.093e-07, -2.69159e-08, 5.95149e-07, 0.00018407, -0.0447333, -0.00201089, 0.998997, 1.0, 1.0, 1.0, 0.708333, 1.0, 1.093e-07, -2.69159e-08, 5.95149e-07, 0.000100006, -0.0243028, -0.00109248, 0.999704, 1.0, 1.0, 1.0, 0.75, 1.0, 1.093e-07, -2.69159e-08, 5.95149e-07, 2.9548e-05, -0.00717932, -0.000322731, 0.999974, 1.0, 1.0, 1.0, 0.791667, 1.0, 7.57881e-08, -2.70992e-08, 5.9616e-07, 7.45058e-09, -1.84082e-09, 1.16415e-10, 1.0, 1.0, 1.0, 1.0]
tracks/3/type = "transform"
tracks/3/path = NodePath(".:Bone4")
tracks/3/interp = 1
tracks/3/keys = [0.0, 1.0, -9.21723e-08, -1.26906e-09, 1.35629e-06, 0.00247916, -0.153227, 0.00135053, 0.988187, 1.0, 1.0, 1.0, 0.0416667, 1.0, -8.82415e-08, -1.26906e-09, 1.35878e-06, 0.00241258, -0.149112, 0.00131426, 0.988816, 1.0, 1.0, 1.0, 0.0833333, 1.0, -7.7707e-08, -1.26906e-09, 1.36521e-06, 0.00223225, -0.137966, 0.00121602, 0.990434, 1.0, 1.0, 1.0, 0.125, 1.0, -6.24556e-08, -1.26906e-09, 1.37401e-06, 0.00196701, -0.121574, 0.00107154, 0.99258, 1.0, 1.0, 1.0, 0.166667, 1.0, -4.4374e-08, -1.26906e-09, 1.38361e-06, 0.00164802, -0.101858, 0.000897767, 0.994797, 1.0, 1.0, 1.0, 0.208333, 1.0, -2.5349e-08, -1.26906e-09, 1.39246e-06, 0.00130976, -0.0809511, 0.000713494, 0.996717, 1.0, 1.0, 1.0, 0.25, 1.0, -7.26742e-09, -1.26906e-09, 1.39899e-06, 0.000988634, -0.0611037, 0.000538561, 0.998131, 1.0, 1.0, 1.0, 0.291667, 1.0, 7.98396e-09, -1.26906e-09, 1.40162e-06, 0.000720378, -0.0445239, 0.000392427, 0.999008, 1.0, 1.0, 1.0, 0.333333, 1.0, 1.85185e-08, -1.26906e-09, 1.39881e-06, 0.000538097, -0.0332576, 0.000293128, 0.999447, 1.0, 1.0, 1.0, 0.375, 1.0, 2.24493e-08, 8.73533e-10, 1.38897e-06, 0.000472457, -0.0292008, 0.000257371, 0.999573, 1.0, 1.0, 1.0, 0.416667, 1.0, 1.57046e-07, 2.23632e-09, 6.30977e-07, -0.00174032, 0.107563, -0.00094805, 0.994196, 1.0, 1.0, 1.0, 0.458333, 1.0, 1.57046e-07, 2.23632e-09, 6.30977e-07, -0.00109425, 0.0676314, -0.000596098, 0.99771, 1.0, 1.0, 1.0, 0.5, 1.0, 1.57046e-07, 2.23632e-09, 6.30977e-07, -0.000319546, 0.0197499, -0.000174075, 0.999805, 1.0, 1.0, 1.0, 0.541667, 1.0, 1.57046e-07, 2.23632e-09, 6.30977e-07, 0.000329468, -0.0203632, 0.000179478, 0.999793, 1.0, 1.0, 1.0, 0.583333, 1.0, 4.2424e-08, 9.37251e-11, 5.98295e-07, 0.00060069, -0.0371264, 0.000327228, 0.99931, 1.0, 1.0, 1.0, 0.625, 1.0, 4.2424e-08, 9.37251e-11, 5.98295e-07, 0.00053811, -0.0332586, 0.000293137, 0.999447, 1.0, 1.0, 1.0, 0.666667, 1.0, 4.2424e-08, 9.37251e-11, 5.98295e-07, 0.000389192, -0.0240545, 0.000212014, 0.999711, 1.0, 1.0, 1.0, 0.708333, 1.0, 4.2424e-08, 9.37251e-11, 5.98295e-07, 0.000211433, -0.0130679, 0.000115179, 0.999915, 1.0, 1.0, 1.0, 0.75, 1.0, 4.2424e-08, 9.37251e-11, 5.98295e-07, 6.24708e-05, -0.00386113, 3.40309e-05, 0.999993, 1.0, 1.0, 1.0, 0.791667, 1.0, 4.2424e-08, 9.37251e-11, 5.98295e-07, -9.8953e-10, -1.84809e-09, -8.14907e-10, 1.0, 1.0, 1.0, 1.0]
tracks/4/type = "transform"
tracks/4/path = NodePath(".:Bone4_end")
tracks/4/interp = 1
tracks/4/keys = [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0416667, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.791667, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]

[sub_resource id=2 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void dir_space_convert_view_to_world(inout vec3 dir, in mat4 inv_view_mat) {
    dir = normalize(inv_view_mat * vec4(dir, 0.0)).xyz;
}


void dir_space_convert_world_to_view(inout vec3 dir, in mat4 view_mat) {
    dir = normalize(view_mat * vec4(dir, 0.0)).xyz;
}


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_normal_map_tangent(float strength, vec4 color, vec3 normal,
        vec3 tangent, vec3 binormal, out vec3 out_normal) {
    vec3 signed_color = vec3(2.0, -2.0, 2.0) * (color.xzy - vec3(0.5));
    vec3 tex_normal = signed_color.x * tangent +
                      signed_color.y * binormal +
                      signed_color.z * normal;
    out_normal = strength * tex_normal + (1.0 - strength) * normal;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void space_convert_yup_to_zup(inout vec3 dir) {
    dir = mat3(vec3(1, 0, 0), vec3(0, 0, 1), vec3(0, -1, 0)) * dir;
}


void space_convert_zup_to_yup(inout vec3 dir) {
    dir = mat3(vec3(1, 0, 0), vec3(0, 0, -1), vec3(0, 1, 0)) * dir;
}

void vertex () {
}

void fragment () {
	mat4 INV_VIEW_MAT = inverse(INV_CAMERA_MATRIX);
	
	// node: 'Normal Map'
	// type: 'ShaderNodeNormalMap'
	// input sockets handling
	float node0_in0_strength = float(0.0);
	vec4 node0_in1_color = vec4(0.5, 0.5, 1.0, 1.0);
	// output sockets definitions
	vec3 node0_out0_normal;
	
	node_normal_map_tangent(node0_in0_strength, node0_in1_color, NORMAL, TANGENT,
		BINORMAL, node0_out0_normal);
	dir_space_convert_view_to_world(node0_out0_normal, INV_VIEW_MAT);
	space_convert_yup_to_zup(node0_out0_normal);
	
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node1_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node1_out0_color;
	float node1_out1_alpha;
	
	node1_in0_vector = vec3(UV, 0.0);
	node_tex_image(node1_in0_vector, texture_0, node1_out0_color, node1_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node2_in0_basecolor = node1_out0_color;
	float node2_in1_subsurface = float(0.0);
	vec3 node2_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node2_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node2_in4_metallic = float(0.0);
	float node2_in5_specular = float(0.5);
	float node2_in6_speculartint = float(0.0);
	float node2_in7_roughness = float(0.5);
	float node2_in8_anisotropic = float(0.0);
	float node2_in9_anisotropicrotation = float(0.0);
	float node2_in10_sheen = float(0.0);
	float node2_in11_sheentint = float(0.5);
	float node2_in12_clearcoat = float(0.0);
	float node2_in13_clearcoatroughness = float(0.029999999329447746);
	float node2_in14_ior = float(1.4500000476837158);
	float node2_in15_transmission = float(0.0);
	float node2_in16_transmissionroughness = float(0.0);
	vec4 node2_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node2_in18_emissionstrength = float(1.0);
	float node2_in19_alpha = float(1.0);
	vec3 node2_in20_normal = node0_out0_normal;
	vec3 node2_in21_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node2_in22_tangent = TANGENT;
	// output sockets definitions
	vec3 node2_bsdf_out0_albedo;
	float node2_bsdf_out1_sss_strength;
	float node2_bsdf_out3_specular;
	float node2_bsdf_out2_metallic;
	float node2_bsdf_out4_roughness;
	float node2_bsdf_out5_clearcoat;
	float node2_bsdf_out6_clearcoat_gloss;
	float node2_bsdf_out7_anisotropy;
	float node2_bsdf_out8_transmission;
	float node2_bsdf_out9_ior;
	
	node_bsdf_principled(node2_in0_basecolor, node2_in1_subsurface,
		node2_in3_subsurfacecolor, node2_in4_metallic, node2_in5_specular,
		node2_in7_roughness, node2_in12_clearcoat, node2_in13_clearcoatroughness,
		node2_in8_anisotropic, node2_in15_transmission, node2_in14_ior,
		node2_bsdf_out0_albedo, node2_bsdf_out1_sss_strength, node2_bsdf_out2_metallic,
		node2_bsdf_out3_specular, node2_bsdf_out4_roughness, node2_bsdf_out5_clearcoat,
		node2_bsdf_out6_clearcoat_gloss, node2_bsdf_out7_anisotropy,
		node2_bsdf_out8_transmission, node2_bsdf_out9_ior);
	space_convert_zup_to_yup(node2_in20_normal);
	dir_space_convert_world_to_view(node2_in20_normal, INV_CAMERA_MATRIX);
	
	
	ALBEDO = node2_bsdf_out0_albedo;
	SSS_STRENGTH = node2_bsdf_out1_sss_strength;
	SPECULAR = node2_bsdf_out3_specular;
	METALLIC = node2_bsdf_out2_metallic;
	ROUGHNESS = node2_bsdf_out4_roughness;
	CLEARCOAT = node2_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node2_bsdf_out6_clearcoat_gloss;
	NORMAL = node2_in20_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node2_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node2_in22_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node2_bsdf_out7_anisotropy;
}
"

[sub_resource id=3 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(2)
shader_param/texture_0 = ExtResource(1)

[sub_resource id=4 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void dir_space_convert_view_to_world(inout vec3 dir, in mat4 inv_view_mat) {
    dir = normalize(inv_view_mat * vec4(dir, 0.0)).xyz;
}


void dir_space_convert_world_to_view(inout vec3 dir, in mat4 view_mat) {
    dir = normalize(view_mat * vec4(dir, 0.0)).xyz;
}


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_normal_map_tangent(float strength, vec4 color, vec3 normal,
        vec3 tangent, vec3 binormal, out vec3 out_normal) {
    vec3 signed_color = vec3(2.0, -2.0, 2.0) * (color.xzy - vec3(0.5));
    vec3 tex_normal = signed_color.x * tangent +
                      signed_color.y * binormal +
                      signed_color.z * normal;
    out_normal = strength * tex_normal + (1.0 - strength) * normal;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void space_convert_yup_to_zup(inout vec3 dir) {
    dir = mat3(vec3(1, 0, 0), vec3(0, 0, 1), vec3(0, -1, 0)) * dir;
}


void space_convert_zup_to_yup(inout vec3 dir) {
    dir = mat3(vec3(1, 0, 0), vec3(0, 0, -1), vec3(0, 1, 0)) * dir;
}

void vertex () {
}

void fragment () {
	mat4 INV_VIEW_MAT = inverse(INV_CAMERA_MATRIX);
	
	// node: 'Normal Map'
	// type: 'ShaderNodeNormalMap'
	// input sockets handling
	float node0_in0_strength = float(0.0);
	vec4 node0_in1_color = vec4(0.5, 0.5, 1.0, 1.0);
	// output sockets definitions
	vec3 node0_out0_normal;
	
	node_normal_map_tangent(node0_in0_strength, node0_in1_color, NORMAL, TANGENT,
		BINORMAL, node0_out0_normal);
	dir_space_convert_view_to_world(node0_out0_normal, INV_VIEW_MAT);
	space_convert_yup_to_zup(node0_out0_normal);
	
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node1_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node1_out0_color;
	float node1_out1_alpha;
	
	node1_in0_vector = vec3(UV, 0.0);
	node_tex_image(node1_in0_vector, texture_0, node1_out0_color, node1_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node2_in0_basecolor = node1_out0_color;
	float node2_in1_subsurface = float(0.0);
	vec3 node2_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node2_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node2_in4_metallic = float(0.0);
	float node2_in5_specular = float(0.5);
	float node2_in6_speculartint = float(0.0);
	float node2_in7_roughness = float(0.5);
	float node2_in8_anisotropic = float(0.0);
	float node2_in9_anisotropicrotation = float(0.0);
	float node2_in10_sheen = float(0.0);
	float node2_in11_sheentint = float(0.5);
	float node2_in12_clearcoat = float(0.0);
	float node2_in13_clearcoatroughness = float(0.029999999329447746);
	float node2_in14_ior = float(1.4500000476837158);
	float node2_in15_transmission = float(0.0);
	float node2_in16_transmissionroughness = float(0.0);
	vec4 node2_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node2_in18_emissionstrength = float(1.0);
	float node2_in19_alpha = float(1.0);
	vec3 node2_in20_normal = node0_out0_normal;
	vec3 node2_in21_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node2_in22_tangent = TANGENT;
	// output sockets definitions
	vec3 node2_bsdf_out0_albedo;
	float node2_bsdf_out1_sss_strength;
	float node2_bsdf_out3_specular;
	float node2_bsdf_out2_metallic;
	float node2_bsdf_out4_roughness;
	float node2_bsdf_out5_clearcoat;
	float node2_bsdf_out6_clearcoat_gloss;
	float node2_bsdf_out7_anisotropy;
	float node2_bsdf_out8_transmission;
	float node2_bsdf_out9_ior;
	
	node_bsdf_principled(node2_in0_basecolor, node2_in1_subsurface,
		node2_in3_subsurfacecolor, node2_in4_metallic, node2_in5_specular,
		node2_in7_roughness, node2_in12_clearcoat, node2_in13_clearcoatroughness,
		node2_in8_anisotropic, node2_in15_transmission, node2_in14_ior,
		node2_bsdf_out0_albedo, node2_bsdf_out1_sss_strength, node2_bsdf_out2_metallic,
		node2_bsdf_out3_specular, node2_bsdf_out4_roughness, node2_bsdf_out5_clearcoat,
		node2_bsdf_out6_clearcoat_gloss, node2_bsdf_out7_anisotropy,
		node2_bsdf_out8_transmission, node2_bsdf_out9_ior);
	space_convert_zup_to_yup(node2_in20_normal);
	dir_space_convert_world_to_view(node2_in20_normal, INV_CAMERA_MATRIX);
	
	
	ALBEDO = node2_bsdf_out0_albedo;
	SSS_STRENGTH = node2_bsdf_out1_sss_strength;
	SPECULAR = node2_bsdf_out3_specular;
	METALLIC = node2_bsdf_out2_metallic;
	ROUGHNESS = node2_bsdf_out4_roughness;
	CLEARCOAT = node2_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node2_bsdf_out6_clearcoat_gloss;
	NORMAL = node2_in20_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node2_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node2_in22_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node2_bsdf_out7_anisotropy;
}
"

[sub_resource id=5 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(4)
shader_param/texture_0 = ExtResource(1)

[sub_resource id=6 type="ArrayMesh"]

resource_name = "Cube043"
surfaces/0 = {
	"material":SubResource(3),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.312947, -4.05732, 0.283134, -0.565539, -4.15058, -0.404118, -0.565539, -4.15058, 0.428004, -0.312947, -4.05732, -0.259249, 0.104448, -4.15058, -0.404118, -0.565539, -4.15058, -0.404118, 0.104448, -4.15058, -0.404118, -0.145107, -4.05732, 0.283134, 0.104448, -4.15058, 0.428004, 0.104448, -4.15058, 0.428004, -0.312947, -4.05732, 0.283134, -0.565539, -4.15058, 0.428004, -0.00926206, -7.49381, -0.262891, -0.451829, -7.49381, 0.286777, -0.451829, -7.49381, -0.262891, 0.104448, -4.15058, 0.428004, -0.451829, -7.49381, 0.286777, -0.00926206, -7.49381, 0.286777, -0.565539, -4.15058, -0.404118, -0.00926206, -7.49381, -0.262891, -0.451829, -7.49381, -0.262891, -0.00180328, -7.339, -0.105025, -0.465988, -7.13794, -0.221105, -0.459288, -7.339, -0.105025, -0.459288, -7.339, 0.127135, -0.00180328, -7.339, -0.105025, -0.459288, -7.339, -0.105025, -0.465988, -7.13794, 0.243215, -0.00180328, -7.339, 0.127135, -0.459288, -7.339, 0.127135, -0.472688, -6.93688, 0.127135, 0.00489676, -7.13794, 0.243215, -0.465988, -7.13794, 0.243215, -0.472688, -6.93688, 0.127135, 0.0115968, -6.93688, -0.105025, 0.0115968, -6.93688, 0.127135, 0.00489676, -7.13794, -0.221105, -0.472688, -6.93688, -0.105025, -0.465988, -7.13794, -0.221105, 0.104448, -4.15058, -0.404118, 0.0115968, -6.93688, 0.127135, 0.0115968, -6.93688, -0.105025, -0.00180328, -7.339, 0.127135, -0.00926206, -7.49381, -0.262891, -0.00180328, -7.339, -0.105025, -0.472688, -6.93688, -0.105025, -0.472688, -6.93688, 0.127135, -0.565539, -4.15058, -0.404118, -0.451829, -7.49381, -0.262891, -0.459288, -7.339, 0.127135, -0.459288, -7.339, -0.105025, -0.312947, -4.05732, -0.259249, -0.145107, -4.05732, -0.259249, -0.145107, -4.05732, -0.259249, -0.145107, -4.05732, 0.283134, -0.00926206, -7.49381, 0.286777, -0.565539, -4.15058, 0.428004, 0.104448, -4.15058, -0.404118, 0.00489676, -7.13794, -0.221105, -0.00180328, -7.339, 0.127135, 0.00489676, -7.13794, 0.243215, 0.0115968, -6.93688, 0.127135, -0.472688, -6.93688, -0.105025, 0.0115968, -6.93688, -0.105025, -0.00926206, -7.49381, 0.286777, -0.00180328, -7.339, 0.127135, 0.00489676, -7.13794, 0.243215, 0.104448, -4.15058, 0.428004, 0.00489676, -7.13794, -0.221105, -0.00180328, -7.339, -0.105025, -0.00926206, -7.49381, -0.262891, -0.00926206, -7.49381, 0.286777, -0.465988, -7.13794, 0.243215, -0.459288, -7.339, 0.127135, -0.451829, -7.49381, 0.286777, -0.451829, -7.49381, -0.262891, -0.459288, -7.339, -0.105025, -0.465988, -7.13794, -0.221105, -0.565539, -4.15058, 0.428004, -0.451829, -7.49381, 0.286777),
		Vector3Array(-0.346348, 0.938106, 0.0, -0.346347, 0.938107, 0.0, -0.346349, 0.938106, 0.0, -1.31568e-07, 0.840844, -0.541278, -1.00747e-07, 0.840844, -0.541278, -1.55506e-07, 0.840844, -0.541278, 0.350048, 0.936732, 1.30344e-08, 0.35005, 0.936731, 3.10513e-08, 0.35005, 0.936731, 3.78098e-08, 6.69064e-07, 0.840844, 0.541277, 8.73741e-07, 0.840844, 0.541277, 1.03272e-06, 0.840844, 0.541277, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.43242e-07, -0.0422051, 0.999109, -3.29196e-08, -0.0422052, 0.999109, 0.0, -0.0422052, 0.999109, -9.7297e-08, -0.0422052, -0.999109, -1.31679e-08, -0.0422052, -0.999109, 0.0, -0.0422052, -0.999109, 0.0, 0.5, 0.866025, 0.0, 0.5, 0.866025, 0.0, 0.5, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, -0.866025, 0.0, 0.5, -0.866025, 0.0, 0.5, -0.866025, 0.0, -0.5, -0.866025, 0.0, -0.5, -0.866026, 0.0, -0.5, -0.866025, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.866025, 0.0, -0.5, 0.866025, 0.0, -0.5, 0.866025, 0.999432, -0.0337055, 0.000109958, 0.999434, -0.033641, 3.99728e-08, 0.999434, -0.033641, 1.16081e-07, 0.998841, -0.0481242, 0.0, 0.998841, -0.0481243, 0.0, 0.998841, -0.0481244, 0.0, -0.999445, -0.0333056, -1.39663e-07, -0.999445, -0.0333056, 0.0, -0.999434, -0.0336523, 3.0134e-05, -0.998841, -0.0481245, 0.0, -0.998841, -0.0481244, 0.0, -0.998841, -0.0481246, 0.0, -0.346346, 0.938107, 0.0, 0.0, 0.840844, -0.541277, 0.350047, 0.936732, 0.0, 0.0, 0.840844, 0.541278, 0.0, -1.0, 0.0, -2.65865e-07, -0.0422051, 0.999109, -1.06346e-07, -0.0422052, -0.999109, 0.0, 0.5, 0.866025, 0.0, 1.0, 0.0, 0.0, 0.5, -0.866025, 0.0, -0.5, -0.866025, 0.0, -1.0, 0.0, 0.0, -0.5, 0.866026, 0.999434, -0.0336258, -1.7372e-05, 0.999434, -0.033631, -2.87872e-06, 0.999434, -0.0336328, 3.80538e-06, 0.999432, -0.0337055, -0.000109986, 0.999434, -0.0336322, -1.61678e-06, 0.999434, -0.0336442, -2.23964e-05, 0.999435, -0.0336286, 8.91276e-06, 0.998841, -0.0481241, 0.0, -0.999434, -0.0336328, 3.10689e-06, -0.999434, -0.033631, -3.0559e-06, -0.999434, -0.0336258, -1.77063e-05, -0.999434, -0.0336286, 9.2946e-06, -0.999434, -0.0336442, -2.22158e-05, -0.999434, -0.0336322, -7.48783e-07, -0.999435, -0.0335992, 4.93352e-05, -0.998841, -0.0481243, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438, 0.921875, 0.0273438),
		null, ; No UV2,
		IntArray(1, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
		FloatArray(0.99213, 0.00787015, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.994367, 0.00563287, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.995817, 0.004183, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.99213, 0.00787015, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.944111, 0.055889, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.925781, 0.074219, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.881492, 0.118508, 0.0, 0.0, 0.943164, 0.0568359, 0.0, 0.0, 0.925781, 0.074219, 0.0, 0.0, 0.881492, 0.118508, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.917505, 0.0824949, 0.0, 0.0, 0.997375, 0.00262457, 0.0, 0.0, 0.906997, 0.0930028, 0.0, 0.0, 0.944111, 0.055889, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.917505, 0.0824949, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.906997, 0.0930028, 0.0, 0.0, 0.881492, 0.118508, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.994367, 0.00563287, 0.0, 0.0, 0.992397, 0.00760334, 0.0, 0.0, 0.992397, 0.00760334, 0.0, 0.0, 0.995817, 0.004183, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.997375, 0.00262457, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.943164, 0.0568359, 0.0, 0.0, 0.917505, 0.0824949, 0.0, 0.0, 0.906997, 0.0930028, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.943164, 0.0568359, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.997375, 0.00262457, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.925781, 0.074219, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.944111, 0.055889, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0),
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0, 1, 51, 3, 4, 52, 6, 7, 53, 9, 10, 54, 12, 13, 55, 15, 16, 56, 18, 19, 57, 21, 22, 58, 24, 25, 59, 27, 28, 60, 30, 31, 61, 33, 34, 62, 36, 37, 63, 64, 66, 65, 67, 66, 64, 68, 70, 69, 68, 39, 70, 39, 40, 67, 67, 40, 66, 41, 39, 68, 42, 43, 71, 72, 74, 73, 75, 77, 76, 47, 77, 75, 72, 78, 74, 46, 78, 72, 78, 46, 47, 47, 45, 77, 48, 49, 79)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(5),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.312947, 0.829232, 0.283135, 0.145866, 1.54902, -0.259249, -0.312947, 0.829232, -0.259249, -0.145107, 0.829232, 0.283135, 0.145866, 1.54902, 0.283135, -0.312947, 0.829232, 0.283135, -0.145107, 0.829232, -0.259249, 0.145866, 1.54902, -0.259249, 0.313706, 1.54902, -0.259249, -0.145107, 0.829232, -0.259249, 0.313706, 1.54902, 0.283135, -0.145107, 0.829232, 0.283135, 0.166307, 6.17731, -0.276643, 0.293266, 6.17731, 0.300529, 0.293266, 6.17731, -0.276643, 0.383, 2.2088, 1.64908, 0.166307, 6.17731, 1.49558, 0.0765726, 2.2088, 1.64908, 0.166307, 6.17731, 0.300529, 0.293266, 6.17731, 1.49558, 0.313706, 1.54902, 0.283135, 0.0765726, 2.2088, 1.64908, 0.145866, 1.54902, 0.283135, 0.0765726, 2.2088, -1.66094, 0.293266, 6.17731, -1.50744, 0.383, 2.2088, -1.66094, 0.166307, 6.17731, -1.50744, 0.145866, 1.54902, -0.259249, 0.383, 2.2088, -1.66094, 0.313706, 1.54902, -0.259249, -0.145107, -0.392407, -0.259249, -0.145107, 0.829232, 0.283135, -0.145107, -0.392407, 0.283135, -0.312947, -0.392407, -0.259249, -0.145107, -0.392407, -0.259249, -0.145107, -0.392407, 0.283135, -0.312947, -0.392407, 0.283135, -0.312947, -0.392407, 0.283135, -0.312947, 0.829232, -0.259249, -0.312947, -0.392407, -0.259249, 0.153528, 5.68867, -1.16971, 0.355207, 2.64998, -1.16971, 0.306044, 5.68867, -1.16971, 0.306044, 5.68867, -0.750873, 0.126099, 2.64998, -0.750873, 0.153528, 5.68867, -0.750873, 0.333474, 2.64998, -0.750873, 0.104365, 2.64998, -1.16971, 0.126099, 2.64998, -0.750873, 0.153528, 5.68867, -0.750873, 0.306044, 5.68867, -1.16971, 0.306044, 5.68867, -0.750873, 0.145866, 1.54902, -0.259249, 0.166307, 6.17731, -0.276643, 0.126099, 2.64998, -0.750873, 0.0765726, 2.2088, -1.66094, 0.153528, 5.68867, -1.16971, 0.166307, 6.17731, -1.50744, 0.383, 2.2088, -1.66094, 0.306044, 5.68867, -1.16971, 0.355207, 2.64998, -1.16971, 0.333474, 2.64998, -0.750873, 0.306044, 5.68867, -0.750873, 0.293266, 6.17731, -0.276643, 0.151367, 2.64998, -0.199991, 0.295707, 5.68867, -0.199991, 0.163865, 5.68867, -0.199991, 0.151367, 2.64998, 0.218844, 0.295707, 5.68867, 0.218844, 0.308205, 2.64998, 0.218844, 0.151367, 2.64998, -0.199991, 0.308205, 2.64998, 0.218844, 0.308205, 2.64998, -0.199991, 0.163865, 5.68867, 0.218844, 0.295707, 5.68867, -0.199991, 0.295707, 5.68867, 0.218844, 0.313706, 1.54902, 0.283135, 0.313706, 1.54902, -0.259249, 0.308205, 2.64998, 0.218844, 0.293266, 6.17731, -0.276643, 0.295707, 5.68867, 0.218844, 0.295707, 5.68867, -0.199991, 0.151367, 2.64998, 0.218844, 0.151367, 2.64998, -0.199991, 0.145866, 1.54902, -0.259249, 0.166307, 6.17731, -0.276643, 0.163865, 5.68867, 0.218844, 0.166307, 6.17731, 0.300529, 0.130639, 2.64998, 0.677054, 0.306044, 5.68867, 0.677054, 0.153528, 5.68867, 0.677054, 0.108335, 2.64998, 1.09589, 0.306044, 5.68867, 1.09589, 0.351237, 2.64998, 1.09589, 0.130639, 2.64998, 0.677054, 0.351237, 2.64998, 1.09589, 0.328933, 2.64998, 0.677054, 0.153528, 5.68867, 1.09589, 0.306044, 5.68867, 0.677054, 0.306044, 5.68867, 1.09589, 0.293266, 6.17731, 0.300529, 0.306044, 5.68867, 1.09589, 0.306044, 5.68867, 0.677054, 0.383, 2.2088, 1.64908, 0.313706, 1.54902, 0.283135, 0.351237, 2.64998, 1.09589, 0.108335, 2.64998, 1.09589, 0.130639, 2.64998, 0.677054, 0.145866, 1.54902, 0.283135, 0.153528, 5.68867, 1.09589, 0.166307, 6.17731, 0.300529, 0.153528, 5.68867, 0.677054, -0.312947, -4.05732, 0.283134, -0.312947, -2.83568, -0.259249, -0.312947, -4.05732, -0.259249, -0.312947, -1.61405, 0.283135, -0.312947, -1.61405, -0.259249, -0.145107, -4.05732, 0.283134, -0.312947, -2.83568, 0.283135, -0.312947, -4.05732, 0.283134, -0.145107, -2.83568, 0.283135, -0.312947, -1.61405, 0.283135, -0.145107, -1.61405, 0.283135, -0.312947, -4.05732, -0.259249, -0.145107, -2.83568, -0.259249, -0.145107, -4.05732, -0.259249, -0.312947, -2.83568, -0.259249, -0.145107, -1.61405, -0.259249, -0.312947, -1.61405, -0.259249, -0.145107, -4.05732, -0.259249, -0.145107, -2.83568, 0.283135, -0.145107, -4.05732, 0.283134, -0.145107, -2.83568, -0.259249, -0.145107, -1.61405, 0.283135, -0.145107, -1.61405, -0.259249, 0.145866, 1.54902, 0.283135, 0.313706, 1.54902, 0.283135, -0.312947, 0.829232, -0.259249, 0.313706, 1.54902, -0.259249, 0.293266, 6.17731, 1.49558, 0.166307, 6.17731, 1.49558, 0.383, 2.2088, 1.64908, 0.166307, 6.17731, -1.50744, 0.293266, 6.17731, -1.50744, 0.0765726, 2.2088, -1.66094, -0.145107, 0.829232, -0.259249, -0.312947, 0.829232, 0.283135, 0.104365, 2.64998, -1.16971, 0.333474, 2.64998, -0.750873, 0.355207, 2.64998, -1.16971, 0.153528, 5.68867, -1.16971, 0.104365, 2.64998, -1.16971, 0.0765726, 2.2088, -1.66094, 0.166307, 6.17731, -1.50744, 0.153528, 5.68867, -0.750873, 0.153528, 5.68867, -1.16971, 0.104365, 2.64998, -1.16971, 0.293266, 6.17731, -1.50744, 0.306044, 5.68867, -1.16971, 0.293266, 6.17731, -1.50744, 0.313706, 1.54902, -0.259249, 0.383, 2.2088, -1.66094, 0.355207, 2.64998, -1.16971, 0.308205, 2.64998, -0.199991, 0.163865, 5.68867, 0.218844, 0.151367, 2.64998, 0.218844, 0.163865, 5.68867, -0.199991, 0.293266, 6.17731, 0.300529, 0.308205, 2.64998, -0.199991, 0.163865, 5.68867, -0.199991, 0.145866, 1.54902, 0.283135, 0.328933, 2.64998, 0.677054, 0.153528, 5.68867, 1.09589, 0.108335, 2.64998, 1.09589, 0.153528, 5.68867, 0.677054, 0.293266, 6.17731, 1.49558, 0.306044, 5.68867, 1.09589, 0.293266, 6.17731, 1.49558, 0.293266, 6.17731, 0.300529, 0.328933, 2.64998, 0.677054, 0.306044, 5.68867, 0.677054, 0.153528, 5.68867, 0.677054, 0.166307, 6.17731, 0.300529, 0.0765726, 2.2088, 1.64908, 0.166307, 6.17731, 1.49558, 0.153528, 5.68867, 1.09589, 0.166307, 6.17731, 1.49558, -0.312947, -2.83568, 0.283135),
		Vector3Array(-0.843254, 0.537515, -1.15987e-08, -0.843254, 0.537515, -2.05874e-08, -0.843254, 0.537515, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 5.89155e-08, -1.0, 0.0, -1.02195e-07, -1.0, 0.0, -1.23345e-07, -1.0, 0.843254, -0.537515, 0.0, 0.843254, -0.537515, 0.0, 0.843254, -0.537515, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0386512, 0.999253, 0.0, 0.0386513, 0.999253, 0.0, 0.0386512, 0.999253, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.900457, 0.434944, 0.0, -0.900458, 0.434944, 0.0, -0.900457, 0.434944, 0.0, 0.0386513, -0.999253, 0.0, 0.0386513, -0.999253, 0.0, 0.0386513, -0.999253, 0.0, 1.0, 0.0, 0.0, -0.904778, -0.425884, 0.0, -0.904778, -0.425884, 0.0, -0.904778, -0.425884, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.11784e-08, 1.0, 0.0, 7.51596e-08, 1.0, 0.0, -1.60763e-08, 1.0, 0.0, 3.84564e-08, -1.0, 0.0, 1.2898e-09, -1.0, 0.0, 4.01908e-08, -1.0, 0.0, 1.0, -3.08873e-07, 0.0, 1.0, -7.66926e-07, 0.0, 1.0, 1.19319e-07, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -0.999316, 0.00875939, 0.0359218, -0.999317, 0.00876419, 0.0359037, -0.999316, 0.00875552, 0.035939, -0.999628, 0.0193969, 0.0191893, -0.999627, 0.0193911, 0.0192333, -0.999627, 0.0193947, 0.0192163, 0.999628, 0.0193969, 0.0191894, 0.999627, 0.0193911, 0.0192334, 0.999627, 0.0193909, 0.0192306, 0.999317, 0.00876787, 0.0358927, 0.999317, 0.0087657, 0.0359035, 0.999317, 0.00876422, 0.0359037, 0.0, -2.85013e-09, 1.0, 0.0, -9.59972e-11, 1.0, 0.0, 0.0, 1.0, 0.0, 5.70026e-09, -1.0, 0.0, 1.91994e-10, -1.0, 0.0, 5.86248e-09, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.999988, 0.00497477, -0.000367879, 0.999989, 0.00475163, 0.000118911, 0.999989, 0.00464448, 4.41913e-07, 0.999987, 0.00498884, 0.000205031, 0.999989, 0.00476984, 4.16851e-05, 0.999989, 0.00477005, -3.28629e-05, -0.999989, 0.00464447, 2.01631e-07, -0.999989, 0.00464448, 1.40988e-05, -0.999989, 0.00475162, 0.000118896, -0.999987, 0.00498884, 0.000204988, -0.999989, 0.00476982, 4.22911e-05, -0.999988, 0.00490922, 0.000364961, 0.0, 5.98424e-09, 1.0, 0.0, 2.55357e-10, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.91973e-06, 1.0, 8.46978e-07, -8.16367e-07, 1.0, 3.60178e-07, -2.8707e-06, 1.0, 1.26654e-06, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.999658, 0.0261425, 0.0, 0.999658, 0.0261425, 0.0, 0.999658, 0.0261426, 0.0, 0.999341, 0.0112923, -0.0344985, 0.999341, 0.0112901, -0.0345006, 0.999342, 0.0112943, -0.0344751, -0.999342, 0.0112943, -0.034475, -0.999341, 0.0112921, -0.0344937, -0.999341, 0.0112901, -0.0345006, -0.999658, 0.0261425, 0.0, -0.999658, 0.0261425, 0.0, -0.999658, 0.0261426, 0.0, -1.0, 2.43954e-08, 0.0, -1.0, -1.21977e-08, 0.0, -1.0, 2.43954e-08, 0.0, -1.0, -2.43954e-08, 0.0, -1.0, -2.43954e-08, 0.0, 0.0, -4.19737e-08, 1.0, 0.0, -1.05343e-08, 1.0, 0.0, -4.59694e-08, 1.0, 0.0, -6.21526e-09, 1.0, 0.0, 1.58474e-08, 1.0, 0.0, 1.81686e-08, 1.0, 0.0, -7.03577e-10, -1.0, 0.0, -1.78168e-08, -1.0, 0.0, 2.68857e-09, -1.0, 0.0, -1.93961e-08, -1.0, 0.0, -1.16846e-10, -1.0, 0.0, 0.0, -1.0, 1.0, -2.43954e-08, 0.0, 1.0, 4.52345e-15, 0.0, 1.0, -2.43954e-08, 0.0, 1.0, 4.52346e-15, 0.0, 1.0, 1.21977e-08, 0.0, 1.0, 1.21977e-08, 0.0, -0.843254, 0.537515, -3.21861e-08, 0.0, 0.0, 1.0, 0.0, 4.80761e-08, -1.0, 0.843254, -0.537515, 0.0, 0.0, 0.0386513, 0.999253, 0.0, 1.0, 0.0, 0.0, -0.900458, 0.434944, 0.0, 0.0386513, -0.999253, 0.0, 1.0, 0.0, 0.0, -0.904778, -0.425884, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 7.81973e-08, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, -1.13849e-06, 0.0, -1.0, 0.0, -0.999316, 0.00875942, 0.0359274, -0.999316, 0.00875957, 0.0359274, -0.999317, 0.00876925, 0.0358975, -0.999317, 0.00876568, 0.0359036, -0.999317, 0.00876833, 0.0358971, -0.999627, 0.0193908, 0.0192305, 0.999627, 0.0193947, 0.0192164, 0.999317, 0.00876834, 0.0358971, 0.999317, 0.00876925, 0.0358975, 0.999316, 0.00875942, 0.0359218, 0.999316, 0.00875962, 0.0359274, 0.999316, 0.00875953, 0.0359273, 0.0, -2.93124e-09, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.999988, 0.00490922, 0.000364878, 0.999989, 0.00464357, 1.43647e-05, -0.999989, 0.00477003, -3.31462e-05, -0.999988, 0.00497477, -0.000367894, 0.0, 6.18248e-09, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.999658, 0.0261425, 0.0, 0.999341, 0.0112959, -0.0344804, 0.999341, 0.0112855, -0.0345113, 0.999342, 0.0112779, -0.0344725, 0.999341, 0.0112921, -0.0344937, 0.99934, 0.0112993, -0.0345112, -0.99934, 0.0112993, -0.0345112, -0.999342, 0.0112779, -0.0344726, -0.999341, 0.0112923, -0.0344984, -0.999341, 0.0112854, -0.0345111, -0.999341, 0.0112959, -0.0344802, -0.999658, 0.0261425, 0.0, -1.0, -1.21977e-08, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array
		null, ; No UV2,
		IntArray(3, 0, 0, 0, 3, 4, 0, 0, 3, 0, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 0, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 3, 0, 0, 0, 3, 4, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 1, 2, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 3, 2, 0, 0, 3, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 2, 1, 3, 0, 3, 2, 0, 0, 3, 2, 0, 0, 1, 2, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 2, 0, 0, 0, 3, 2, 0, 0, 3, 2, 0, 0, 1, 2, 0, 0, 2, 1, 3, 0, 1, 2, 0, 0, 2, 0, 0, 0, 3, 2, 0, 0, 3, 2, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 3, 0, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 3, 0, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 3, 4, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 0, 0, 3, 4, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 3, 0, 0, 2, 1, 0, 0),
		FloatArray(1.0, 0.0, 0.0, 0.0, 0.889673, 0.110327, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.993319, 0.00668112, 0.0, 0.0, 0.863903, 0.136097, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.999516, 0.000484013, 0.0, 0.0, 0.889673, 0.110327, 0.0, 0.0, 0.884388, 0.115612, 0.0, 0.0, 0.999516, 0.000484013, 0.0, 0.0, 0.870385, 0.129615, 0.0, 0.0, 0.993319, 0.00668112, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.598609, 0.401391, 0.0, 0.0, 0.965838, 0.0341623, 0.0, 0.0, 0.601552, 0.398448, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.965485, 0.034515, 0.0, 0.0, 0.870385, 0.129615, 0.0, 0.0, 0.601552, 0.398448, 0.0, 0.0, 0.863903, 0.136097, 0.0, 0.0, 0.62486, 0.37514, 0.0, 0.0, 0.989183, 0.0108167, 0.0, 0.0, 0.618391, 0.381609, 0.0, 0.0, 0.989478, 0.0105215, 0.0, 0.0, 0.889673, 0.110327, 0.0, 0.0, 0.618391, 0.381609, 0.0, 0.0, 0.884388, 0.115612, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.993319, 0.00668112, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.93733, 0.0626698, 0.0, 0.0, 0.593645, 0.406355, 0.0, 0.0, 0.936347, 0.0636525, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.574195, 0.425805, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.565166, 0.434834, 0.0, 0.0, 0.597315, 0.402685, 0.0, 0.0, 0.574195, 0.425805, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.936347, 0.0636525, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.889673, 0.110327, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.574195, 0.425805, 0.0, 0.0, 0.62486, 0.37514, 0.0, 0.0, 0.93733, 0.0626698, 0.0, 0.0, 0.989478, 0.0105215, 0.0, 0.0, 0.618391, 0.381609, 0.0, 0.0, 0.936347, 0.0636525, 0.0, 0.0, 0.593645, 0.406355, 0.0, 0.0, 0.565166, 0.434834, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.604537, 0.395463, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.58698, 0.41302, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.638703, 0.361297, 0.0, 0.0, 0.604537, 0.395463, 0.0, 0.0, 0.638703, 0.361297, 0.0, 0.0, 0.647452, 0.352548, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.870385, 0.129615, 0.0, 0.0, 0.884388, 0.115612, 0.0, 0.0, 0.638703, 0.361297, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.58698, 0.41302, 0.0, 0.0, 0.604537, 0.395463, 0.0, 0.0, 0.889673, 0.110327, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.530997, 0.469003, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.560735, 0.439265, 0.0, 0.0, 0.925933, 0.0740672, 0.0, 0.0, 0.551128, 0.448872, 0.0, 0.0, 0.530997, 0.469003, 0.0, 0.0, 0.551128, 0.448872, 0.0, 0.0, 0.576224, 0.423776, 0.0, 0.0, 0.929335, 0.070665, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.925933, 0.0740672, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.925933, 0.0740672, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.598609, 0.401391, 0.0, 0.0, 0.870385, 0.129615, 0.0, 0.0, 0.551128, 0.448872, 0.0, 0.0, 0.560735, 0.439265, 0.0, 0.0, 0.530997, 0.469003, 0.0, 0.0, 0.863903, 0.136097, 0.0, 0.0, 0.929335, 0.070665, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.99213, 0.00787015, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.994367, 0.00563287, 0.0, 0.0, 0.971361, 0.0286389, 0.0, 0.0, 0.983763, 0.0162374, 0.0, 0.0, 0.995817, 0.004183, 0.0, 0.0, 0.999928, 7.16254e-05, 0.0, 0.0, 0.99213, 0.00787015, 0.0, 0.0, 0.994876, 0.00288086, 0.00224311, 0.0, 0.971361, 0.0286389, 0.0, 0.0, 0.961286, 0.0387145, 0.0, 0.0, 0.994367, 0.00563287, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.992397, 0.00760334, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.971633, 0.0283669, 0.0, 0.0, 0.983763, 0.0162374, 0.0, 0.0, 0.992397, 0.00760334, 0.0, 0.0, 0.994876, 0.00288086, 0.00224311, 0.0, 0.995817, 0.004183, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.961286, 0.0387145, 0.0, 0.0, 0.971633, 0.0283669, 0.0, 0.0, 0.863903, 0.136097, 0.0, 0.0, 0.870385, 0.129615, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.884388, 0.115612, 0.0, 0.0, 0.965485, 0.034515, 0.0, 0.0, 0.965838, 0.0341623, 0.0, 0.0, 0.598609, 0.401391, 0.0, 0.0, 0.989478, 0.0105215, 0.0, 0.0, 0.989183, 0.0108167, 0.0, 0.0, 0.62486, 0.37514, 0.0, 0.0, 0.999516, 0.000484013, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.597315, 0.402685, 0.0, 0.0, 0.565166, 0.434834, 0.0, 0.0, 0.593645, 0.406355, 0.0, 0.0, 0.93733, 0.0626698, 0.0, 0.0, 0.597315, 0.402685, 0.0, 0.0, 0.62486, 0.37514, 0.0, 0.0, 0.989478, 0.0105215, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.93733, 0.0626698, 0.0, 0.0, 0.597315, 0.402685, 0.0, 0.0, 0.989183, 0.0108167, 0.0, 0.0, 0.936347, 0.0636525, 0.0, 0.0, 0.989183, 0.0108167, 0.0, 0.0, 0.884388, 0.115612, 0.0, 0.0, 0.618391, 0.381609, 0.0, 0.0, 0.593645, 0.406355, 0.0, 0.0, 0.647452, 0.352548, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.58698, 0.41302, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.647452, 0.352548, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.863903, 0.136097, 0.0, 0.0, 0.576224, 0.423776, 0.0, 0.0, 0.929335, 0.070665, 0.0, 0.0, 0.560735, 0.439265, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.965485, 0.034515, 0.0, 0.0, 0.925933, 0.0740672, 0.0, 0.0, 0.965485, 0.034515, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.576224, 0.423776, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.601552, 0.398448, 0.0, 0.0, 0.965838, 0.0341623, 0.0, 0.0, 0.929335, 0.070665, 0.0, 0.0, 0.965838, 0.0341623, 0.0, 0.0, 0.999928, 7.16254e-05, 0.0, 0.0),
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 13, 19, 20, 22, 21, 23, 25, 24, 14, 12, 26, 27, 29, 28, 30, 32, 31, 33, 34, 6, 35, 36, 5, 37, 39, 38, 40, 42, 41, 43, 45, 44, 46, 48, 47, 49, 51, 50, 52, 54, 53, 55, 57, 56, 58, 60, 59, 61, 63, 62, 64, 66, 65, 67, 69, 68, 70, 72, 71, 73, 75, 74, 76, 78, 77, 79, 81, 80, 82, 84, 83, 85, 87, 86, 88, 90, 89, 91, 93, 92, 94, 96, 95, 97, 99, 98, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110, 112, 114, 113, 113, 116, 115, 116, 39, 37, 117, 119, 118, 120, 118, 121, 122, 121, 36, 123, 125, 124, 126, 124, 127, 128, 127, 34, 129, 131, 130, 132, 130, 133, 134, 133, 32, 0, 1, 135, 3, 4, 136, 6, 7, 137, 9, 10, 138, 12, 13, 18, 15, 16, 139, 18, 19, 140, 20, 21, 141, 23, 24, 142, 14, 26, 143, 27, 28, 144, 30, 31, 145, 33, 6, 137, 35, 5, 3, 37, 38, 146, 40, 41, 147, 43, 44, 148, 46, 47, 149, 49, 50, 150, 151, 54, 152, 152, 54, 52, 53, 154, 153, 153, 154, 155, 53, 54, 154, 55, 56, 156, 58, 59, 157, 62, 159, 158, 160, 61, 161, 161, 61, 162, 62, 63, 159, 160, 63, 61, 64, 65, 163, 67, 68, 164, 70, 71, 165, 73, 74, 166, 80, 78, 167, 167, 78, 76, 77, 168, 79, 79, 168, 81, 77, 78, 168, 79, 80, 167, 83, 85, 169, 170, 82, 87, 87, 82, 86, 83, 84, 85, 170, 84, 82, 85, 86, 169, 88, 89, 171, 91, 92, 172, 94, 95, 173, 97, 98, 174, 100, 101, 175, 176, 103, 177, 104, 179, 178, 178, 179, 180, 105, 103, 176, 104, 105, 179, 107, 182, 181, 183, 185, 184, 183, 106, 185, 107, 108, 182, 183, 108, 106, 109, 110, 186, 112, 113, 187, 113, 115, 187, 116, 37, 115, 117, 118, 120, 120, 121, 122, 122, 36, 35, 123, 124, 126, 126, 127, 128, 128, 34, 33, 129, 130, 132, 132, 133, 134, 134, 32, 30)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Armature" type="Skeleton" parent="."]

bones_in_world_transform = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.0216526, 5.38275, 0.016416)
bones/0/name = "Bone1"
bones/0/parent = -1
bones/0/rest = Transform(0.999509, 0.00095302, 0.031313, 0.0313252, -0.0423977, -0.99861, 0.000375898, 0.9991, -0.0424067, -0.328049, -5.58329, -0.00601073)
bones/0/pose = Transform(1.0, 2.09277e-14, -2.30913e-14, -2.09277e-14, 1.0, -1.04308e-07, 2.30913e-14, 1.04308e-07, 1.0, 2.98023e-08, 0.0, 0.0)
bones/0/enabled = true
bones/0/bound_children = []
bones/1/name = "Bone2"
bones/1/parent = 0
bones/1/rest = Transform(0.999172, 0.00227545, -0.0406147, 0.000125247, 0.998258, 0.0590089, 0.0406782, -0.0589652, 0.997431, -1.76187e-08, -1.41445e-08, -1.91953)
bones/1/pose = Transform(1.0, 0.0, -1.86355e-09, 0.0, 1.0, -1.39698e-09, 1.86355e-09, 1.39698e-09, 1.0, -4.47047e-08, -1.02443e-08, 1.19173e-07)
bones/1/enabled = true
bones/1/bound_children = []
bones/2/name = "Bone3"
bones/2/parent = 1
bones/2/rest = Transform(0.999541, 0.00287396, 0.0301577, -0.00247604, 0.999909, -0.0132238, -0.030193, 0.013143, 0.999458, -2.27774e-08, -6.40284e-10, -1.62608)
bones/2/pose = Transform(1.0, -2.32831e-10, -3.68163e-09, 2.32831e-10, 1.0, -1.49012e-08, 3.68163e-09, 1.49012e-08, 1.0, 7.57881e-08, -2.70992e-08, 5.9616e-07)
bones/2/enabled = true
bones/2/bound_children = []
bones/3/name = "Bone4"
bones/3/parent = 2
bones/3/rest = Transform(0.998097, 0.00958057, -0.0609185, -0.00986687, 0.999942, -0.0044007, 0.0608728, 0.00499339, 0.998133, 0.0280938, 0.00406912, -1.76607)
bones/3/pose = Transform(1.0, 1.62982e-09, -3.69619e-09, -1.62981e-09, 1.0, 1.97906e-09, 3.69619e-09, -1.97906e-09, 1.0, 4.2424e-08, 9.37251e-11, 5.98295e-07)
bones/3/enabled = true
bones/3/bound_children = []
bones/4/name = "Bone4_end"
bones/4/parent = 3
bones/4/rest = Transform(0.999744, 0.0065942, -0.0216224, -0.00635395, 0.999917, 0.0111607, 0.0216942, -0.0110205, 0.999704, 1.43191e-08, -4.88944e-09, -3.32549)
bones/4/pose = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
bones/4/enabled = true
bones/4/bound_children = []

[node name="AnimationPlayer" type="AnimationPlayer" parent="Armature"]

root_node = NodePath("..:")
anims/ArmatureAction = SubResource(1)

[node name="spatula" type="MeshInstance" parent="Armature"]

mesh = SubResource(6)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.160917, 1.91411, 0.0302126)
skeleton = NodePath("..:")
